-- 21-01-12 JDBC_Dao&Dto_GUI Supermarket program		(c)cherryuki(ji)

SELECT * FROM TAB;
DROP TABLE SHOP_BASKET;
DROP TABLE ORDER_PRODUCT;
DROP TABLE ORDER_SHEET;
DROP TABLE ORDER_CUSTOMER;
DROP TABLE CUSTOMER;
DROP TABLE CUS_LEVEL;
DROP SEQUENCE CUS_SEQ;

CREATE TABLE CUS_LEVEL(
    LNO     NUMBER(1,0)     PRIMARY KEY,
    LNAME   VARCHAR2(20)    UNIQUE,
    LLOW    NUMBER(9),
    LHIGH   NUMBER(9)
    );
DESC CUS_LEVEL;
CREATE TABLE CUSTOMER(
    CID     NUMBER(6)       PRIMARY KEY, --CUS_SEQ
    CTEL    VARCHAR2(20)    UNIQUE  NOT NULL,
    CNAME   VARCHAR2(30)    NOT NULL,
    CPOINT  NUMBER(9)       DEFAULT 1000,
    CAMOUNT NUMBER(9)       DEFAULT 0,
    LNO     NUMBER(1)       DEFAULT 1 REFERENCES CUS_LEVEL(LNO)
    );
CREATE SEQUENCE CUS_SEQ
    MAXVALUE 999999
    NOCYCLE
    NOCACHE;

INSERT INTO CUS_LEVEL VALUES (1, 'NORMAL', 0, 499999);
INSERT INTO CUS_LEVEL VALUES (2, 'SILVER', 500000, 999999);
INSERT INTO CUS_LEVEL VALUES (3, 'GOLD', 1000000, 2999999);
INSERT INTO CUS_LEVEL VALUES (4, 'VIP', 3000000, 4999999);
INSERT INTO CUS_LEVEL VALUES (5, 'VVIP', 5000000, 999999999);
SELECT * FROM CUS_LEVEL;
COMMIT;

INSERT INTO CUSTOMER(CID, CTEL, CNAME) VALUES (CUS_SEQ.NEXTVAL, '010-0000-0000', '공지철');
INSERT INTO CUSTOMER VALUES(CUS_SEQ.NEXTVAL, '010-1111-1111', '박보검', 5000, 700000, 2);
INSERT INTO CUSTOMER(CID, CTEL, CNAME) VALUES(CUS_SEQ.NEXTVAL, '010-2000-1111', '유인나');
SELECT * FROM CUSTOMER;
COMMIT;

-- 0. 레벨이름들 검색 : public Vector<String> getLevelNames()
SELECT LNAME FROM CUS_LEVEL ORDER BY LNO;
-- 1. cId로 검색 : public CustomerDto cIdGetCustomer(int cId)
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LNAME, (SELECT LHIGH-CAMOUNT FROM CUSTOMER WHERE C.CID=CID AND LNO!=5) FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LNO=L.LNO AND CID=1;
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LNAME, (SELECT LHIGH-CAMOUNT FROM CUSTOMER WHERE C.CID=CID AND LNO!=5) FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE CAMOUNT BETWEEN LLOW AND LHIGH AND CID=1;
-- 2. 폰뒤4자리(FULL) 검색 - CTEL, CNAME, CPOINT, CAMOUNT, LNAME, 레벨업을 위한 쓸 돈
--    public ArrayList<CustomerDto> cTelGetCustomers(String cTel);
SELECT (SELECT LHIGH-CAMOUNT+1 FROM CUSTOMER, CUS_LEVEL WHERE C.CID=CID AND CAMOUNT BETWEEN LLOW AND LHIGH) FORLEVELUP FROM CUSTOMER C;
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LNAME, (SELECT LHIGH-CAMOUNT FROM CUSTOMER WHERE C.CID=CID AND LNO!=5) FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LNO=L.LNO AND CTEL LIKE '%0000';
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LNAME, (SELECT LHIGH-CAMOUNT FROM CUSTOMER WHERE C.CID=CID AND LNO!=5) FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LNO=L.LNO AND CTEL LIKE '%'||'0000'; -- for JAVA
-- 3. 고객이름검색 - CTEL, CNAME, CPOINT, CAMOUNT, LNAME, 레벨업을 위한 쓸 돈
--                       public ArrayList<CustomerDto> cNameGetCustomers(String cName);
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LNAME, 
        (SELECT LHIGH-CAMOUNT FROM CUSTOMER WHERE C.CID=CID AND LNO!=5) FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LNO=L.LNO AND CNAME='공지철';
-- 4. 포인트로만 구매(1000원짜리를 포인트로만 구매) : public int buyWithPoint(int cAmount, int cId)
UPDATE CUSTOMER SET CPOINT=CPOINT-7000 WHERE CID=2;
ROLLBACK;
-- 5. 물품구매 (1000000원짜리를 구매할 경우. 포인트는 구매금액의 5%)
    -- 물품구매시 UPDATE 2회 필요(구매누적금액 UPDATE와 LNO UPDATE)
    --  public int buy(int cAmount, int cId)
UPDATE CUSTOMER SET CAMOUNT=CAMOUNT+1000000, CPOINT=CPOINT+(1000000*0.05) WHERE CID=2; -- (1)
UPDATE CUSTOMER SET LNO=(SELECT L.LNO FROM CUSTOMER C, CUS_LEVEL L WHERE CAMOUNT+1000000 BETWEEN LLOW AND LHIGH AND CID=2) WHERE CID=2;  -- (2)
SELECT L.LNO FROM CUSTOMER C, CUS_LEVEL L WHERE CAMOUNT+1000000 BETWEEN LLOW AND LHIGH AND CID=2;
UPDATE CUSTOMER SET CAMOUNT=CAMOUNT+1000000, 
                    CPOINT=CPOINT+(1000000*0.05), 
                    LNO=(SELECT L.LNO FROM CUSTOMER C, CUS_LEVEL L WHERE CAMOUNT+1000000 BETWEEN LLOW AND LHIGH AND CID=2) 
    WHERE CID=2; -- (1)+(2)
ROLLBACK;
-- 6. 등급별출력 - CID, CTEL, CNAME, CPOINT, CAMOUNT, LNAME, 레벨업을위한쓸돈
--              public ArrayList<CustomerDto> levelNameGetCustomers(String levelName)
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LNAME, 
        (SELECT LHIGH-CAMOUNT FROM CUSTOMER WHERE C.CID=CID AND LNO!=5) FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LNO=L.LNO AND LNAME='NORMAL'
    ORDER BY CAMOUNT DESC;
-- 7.전체출력 - CID, CTEL, CNAME, CPOINT, CAMOUNT, LNAME, 레벨업을위한쓸돈
--            public ArrayList<CustomerDto> getCustomers()
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LNAME, 
        (SELECT LHIGH-CAMOUNT FROM CUSTOMER WHERE C.CID=CID AND LNO!=5) FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LNO=L.LNO
    ORDER BY CAMOUNT DESC;
-- 8. 회원가입(고객전화와 고객이름은 입력받아 INSERT)
--          public int insertCustomer(String cTel, String cName)
INSERT INTO CUSTOMER (CID, CTEL, CNAME) VALUES (CUS_SEQ.NEXTVAL, '010-0000-1111', '공지철');
SELECT * FROM CUSTOMER;
-- 9. 번호수정 : public int updateCustomer(String cTel, int cId)
UPDATE CUSTOMER SET CTEL='010-1111-1111' WHERE CID=7;
-- 10. 회원탈퇴 : public int deleteCustomer(String cTel)
DELETE CUSTOMER WHERE CTEL='010-1111-1111';
DELETE CUSTOMER WHERE CID=4;
ROLLBACK;