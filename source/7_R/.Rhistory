theme(legend.position = "none")
grid.arrange(young, middle, old, ncol=3)
#연령대 별로 나눠서 비교
library(gridExtra)
young <- ggplot(subset(welfare, agegrade=='young'), aes(x=gender, y=income)) +
geom_point(position="jitter", col="tan3", alpha=0.3) +
geom_violin() +
geom_boxplot(aes(fill=gender), notch=T, width=0.6, alpha=0.5) +
theme(legende.position="none")
middle <- ggplot(subset(welfare, agegrade=='middle'), aes(x=gender, y=income)) +
geom_point(position="jitter", col="tan3", alpha=0.3) +
geom_violin() +
geom_boxplot(aes(fill=gender), notch=T, width=0.6, alpha=0.5) +
theme(legend.position = "none")
old <- ggplot(subset(welfare, agegrade=='old'), aes(x=gender, y=income)) +
geom_point(position="jitter", col="tan3", alpha=0.3) +
geom_violin() +
geom_boxplot(aes(fill=gender), notch=T, width=0.6, alpha=0.5) +
theme(legend.position = "none")
grid.arrange(young, middle, old, ncol=3)
grid.arrange(young, middle, old, ncol=3)
young <- ggplot(subset(welfare, agegrade=='young'), aes(x=gender, y=income)) +
geom_point(position="jitter", col="tan3", alpha=0.3) +
geom_violin() +
geom_boxplot(aes(fill=gender), notch=T, width=0.6, alpha=0.5) +
theme(legende.position="none")
middle <- ggplot(subset(welfare, agegrade=='middle'), aes(x=gender, y=income)) +
geom_point(position="jitter", col="tan3", alpha=0.3) +
geom_violin() +
geom_boxplot(aes(fill=gender), notch=T, width=0.6, alpha=0.5) +
theme(legend.position = "none")
old <- ggplot(subset(welfare, agegrade=='old'), aes(x=gender, y=income)) +
geom_point(position="jitter", col="tan3", alpha=0.3) +
geom_violin() +
geom_boxplot(aes(fill=gender), notch=T, width=0.6, alpha=0.5) +
theme(legend.position = "none")
grid.arrange(young, middle, old, ncol=3)
young <-
ggplot(subset(welfare, agegrade=='young'), aes(x=gender, y=income)) +
geom_point(position="jitter", col="tan3", alpha=0.3) +
geom_violin() +
geom_boxplot(aes(fill=gender), notch=T, width=0.6, alpha=0.5) +
theme(legende.position="none")
ggplot(subset(welfare, agegrade=='young'), aes(x=gender, y=income)) +
geom_point(position="jitter", col="tan3", alpha=0.3) +
geom_violin() +
geom_boxplot(aes(fill=gender), notch=T, width=0.6, alpha=0.5) +
theme(legende.position="none")
ggplot(subset(welfare, agegrade=='young'), aes(x=gender, y=income)) +
geom_point(position="jitter", col="tan3", alpha=0.3) +
geom_violin() +
geom_boxplot(aes(fill=gender), notch=T, width=0.6, alpha=0.5) +
theme(legende.position="none")
ggplot(subset(welfare, agegrade=='young'), aes(x=gender, y=income)) +
geom_point(position="jitter", col="tan3", alpha=0.3) +
geom_violin()
ggplot(subset(welfare, agegrade=='young'), aes(x=gender, y=income)) +
geom_point(position="jitter", col="tan3", alpha=0.3) +
geom_violin() +
geom_boxplot(aes(fill=gender), notch=T, width=0.6, alpha=0.5)
young <- ggplot(subset(welfare, agegrade=='young'), aes(x=gender, y=income)) +
geom_point(position="jitter", col="tan3", alpha=0.3) +
geom_violin() +
geom_boxplot(aes(fill=gender), notch=T, width=0.6, alpha=0.5) +
theme(legend.position="none")
middle <- ggplot(subset(welfare, agegrade=='middle'), aes(x=gender, y=income)) +
geom_point(position="jitter", col="tan3", alpha=0.3) +
geom_violin() +
geom_boxplot(aes(fill=gender), notch=T, width=0.6, alpha=0.5) +
theme(legend.position = "none")
old <- ggplot(subset(welfare, agegrade=='old'), aes(x=gender, y=income)) +
geom_point(position="jitter", col="tan3", alpha=0.3) +
geom_violin() +
geom_boxplot(aes(fill=gender), notch=T, width=0.6, alpha=0.5) +
theme(legend.position = "none")
grid.arrange(young, middle, old, ncol=3)
# 6. 나이에 따른 월급 변화를 성별을 분리하여 시각화
welfare %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(mean.income=mean(income),
sd.income=sd(income),
median.income=median(income),
min.income=min(income),
max.income=max(income),
n=n())
welfare %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(mean.income=mean(income)) %>%
ggplot(aes(x=age, y=mean.income, col=gender)) +
geom_line()
ggsave('outData/사례연구소스_ex06.png')
# 7. 직업별 월급의 차이가 나는지 분석하고,
#만약 월급의 차이가나면 어떤 직업이 월급이 가장 많은지 상위 10개 직업군만 시각화
library(readxl)
job <-read_excel('inData/Koweps/Koweps_Codebook.xlsx', sheet=2)
head(job)
welfare <-left_join(welfare, job, by='code_job')
head(welfare)
welfare %>%
filter(!is.na(income)&!is.na(job)) %>%
group_by(job) %>%
summarise(mean.income=mean(income),
sd.income=sd(income),
n=n()) %>%
arrange(-mean.income)
welfare %>%
filter(!is.na(income)&!is.na(job)) %>%
group_by(job) %>%
summarise(mean.income=mean(income),
sd.income=sd(income),
n=n()) %>%
arrange(desc(mean.income)) %>%
head(10)
welfare %>%
filter(!is.na(income)&!is.na(job)) %>%
group_by(job) %>%
summarise(mean.income=mean(income),
sd.income=sd(income),
n=n()) %>%
arrange(-mean.income) %>%
head(10)
welfare %>%
filter(!is.na(income)&!is.na(job)) %>%
group_by(job) %>%
summarise(mean.income=mean(income),
sd.income=sd(income),
n=n()) %>%
arrange(desc(mean.income)) %>%
head(10) %>%
ggplot(aes(x=job, y=mean.income)) +
geom_col()
welfare %>%
filter(!is.na(income)&!is.na(job)) %>%
group_by(job) %>%
summarise(mean.income=mean(income),
sd.income=sd(income),
n=n()) %>%
arrange(desc(mean.income)) %>%
head(10) %>%
ggplot(aes(x=job, y=mean.income)) +
geom_col() +
coord_flip()
welfare %>%
filter(!is.na(income)&!is.na(job)) %>%
group_by(job) %>%
summarise(mean.income=mean(income),
sd.income=sd(income),
n=n()) %>%
arrange(desc(mean.income)) %>%
head(10) %>%
ggplot(aes(x=reorder(job, mean.income), y=mean.income)) + #reorder(a, b) b의 내림차순으로 a정렬
geom_col() +
coord_flip() + #coord_flip(); x축과 y축 위치 바꾸기(가로 막대 그래프)
labs(title="상위 소득 10개 직업군",
x="직업", y="평균 소득")
ggsave('outData/사례연구소스_top10.png')
welfare %>%
filter(!is.na(income)&!is.na(job)) %>%
group_by(job) %>%
summarise(mean.income=mean(income)) %>%
arrange(-mean.income) %>%
tail(10) %>%
ggplot(aes(y=reorder(job, mean.income), x=mean.income)) +
geom_col() +
labs(title="하위 소득 10개 직업군",
x="평균 소득", y="직업")
# 8. 성별로 어떤 직업이 가장 많을지 분석하시오.
welfare %>%
filter(!is.na(job)&gender=='female') %>%
group_by(job) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
head(10)
welfare %>%
filter(!is.na(job)&gender=='male') %>%
group_by(job) %>%
summarise(n=n()) %>%
arrange(-n) %>%
head(10)
f_job <-welfare %>%
filter(!is.na(job)&gender=='female') %>%
group_by(job) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
head(10) %>%
ggplot(aes(y=reorder(job, n), x=n)) +
geom_col() +
labs(title="여성 최빈 직업(상위10)",
y="직업", x="여성 수")
m_job <- welfare %>%
filter(!is.na(job)&gender=='male') %>%
group_by(job) %>%
summarise(n=n()) %>%
arrange(-n) %>%
head(10) %>%
ggplot(aes(y=reorder(job, n), x=n)) +
geom_col() +
labs(title="남성 최빈 직업(상위10)",
y="직업", x="남성 수")
grid.arrange(f_job, m_job, ncol=2)
# 9. 종교 유무에 따른 이혼률을 분석하시오.
colSums(is.na(welfare))
table(is.na(welfare$religion))
str(welfare)
table(welfare$religion, useNA="ifany")
welfare$religion <-factor(ifelse(welfare$religion==1, '종교-유', '종교-무'))
ggplot(welfare aes(x=religion, fill=religion)) +
geom_bar()
ggplot(welfare, aes(x=religion, fill=religion)) +
geom_bar()
table(welfare$marriage, useNA = "ifany")
welfare$marrige_group <- ifelse(welfare$marriage==1, "기혼",
ifelse(welfare$marriage==3, "이혼", NA))
table(welfare$marrige_group, useNA="ifany")
table(welfare$religion, welfare$marrige_group)
table(welfare$religion, welfare$marrige_group, useNA="ifany") #결측치 포함
welfare %>%
filter(!is.na(religion)&!is.na(marrige_group)) %>%
group_by(religion, marrige_group) %>%
summarise(n=n())
temp <- welfare %>%
filter(!is.na(religion)&is.na(marrige_group)) %>%
group_by(religion, marrige_group) %>%
summarise(n=n())
temp <- welfare %>%
filter(!is.na(religion)&is.na(marrige_group)) %>%
group_by(religion, marrige_group) %>%
summarise(n=n()) %>%
group_by(religion) %>%
mutate(total=sum(n),
ratio=n/total*100)
temp
table(welfare$marriage, useNA = "ifany")
welfare$marrige_group <- ifelse(welfare$marriage==1, "기혼",
ifelse(welfare$marriage==3, "이혼", NA))
table(welfare$marrige_group, useNA="ifany")
table(welfare$religion, welfare$marrige_group)
table(welfare$religion, welfare$marrige_group, useNA="ifany") #결측치 포함
welfare %>%
filter(!is.na(religion)&!is.na(marrige_group)) %>%
group_by(religion, marrige_group) %>%
summarise(n=n())
temp <- welfare %>%
filter(!is.na(religion)&is.na(marrige_group)) %>%
group_by(religion, marrige_group) %>%
summarise(n=n()) %>%
group_by(religion) %>%
mutate(total=sum(n),
ratio=n/total*100)
temp
temp <- welfare %>%
filter(!is.na(religion)&!is.na(marrige_group)) %>%
group_by(religion, marrige_group) %>%
summarise(n=n()) %>%
group_by(religion) %>%
mutate(total=sum(n),
ratio=n/total*100)
temp
ggplot(temp, aes(x=religion, y=ratio, fill=marrige_group)) +
geom_col()
ggplot(temp, aes(x=religion, y=ratio, fill=marrige_group)) +
geom_col(position="dodge")
var.test(data=temp, n~religion)
# 10. 지역별 연령대 비율을 분석하시오. 노년층이 많은 지역 출력
colSums(is.na(welfare))
table(is.na(welfare$religion))
table(is.na(welfare$age))
region <- data.frame(code_region=1:7, region=c('서울', '수도권(인천/경기)', '부산/경남/울산',
'대구/경북', '대전/충남', '강원/충북',
'광주/전남/전북/제주도'))
region
head(welfare)
table(welfare$code_region, useNA="ifany")
welfare <- left_join(welfare, region, by='code_region')
table(welfare$region, useNA = "ifany")
temp <- welfare %>%
group_by(region, agegrade) %>%
summarise(n=n()) %>%
group_by(region) %>%
mutate(total=sum(n),
ratio=n/total*100)
ggplot(temp, aes(x=region, y=ratio, fill=agegrade)) +
geom_col(position = "dodge") +
aes(stringr::str_wrap(region, 6), ratio) +
labs(x="region")
#노년층 비율이 높은 지역순
temp %>%
filter(agegrade=='old') %>%
arrange(-ratio)
#노년층(수) 많은 지역순
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col()
#노년층(수) 많은 지역순
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_label(aes(label=n), fill="white")
#노년층(수) 많은 지역순
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_label(aes(label=n), fill="white", nudge_y=1)
#노년층(수) 많은 지역순
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_label(aes(label=n), fill="white", nudge_y=0)
#노년층(수) 많은 지역순
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_label(aes(label=n), fill="white", nudge_y=1.1)
#노년층(수) 많은 지역순
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_label(aes(label=n), fill="white", nudge_y=1.1) +
theme(legend.position = "none")
#노년층(수) 많은 지역순
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_label(aes(label=n), fill="white", nudge_y=1.1) +
theme(legend.position = "none") +
scale_fill_manual(values=topo.colors(10))
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col()
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col()
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(strinr:str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_text(aes(label=n), njust=-0.5)
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(stringr:str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_text(aes(label=n), njust=-0.5)
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(stringr:str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_text(aes(label=n), vjust=-0.5)
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_text(aes(label=n), vjust=-0.5)
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_text(aes(label=n), vjust=-0.5) +
theme(legend.position = "none")
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_text(aes(label=n), vjust=-0.5) +
theme(legend.position = "none") +
scale_fill_manual(values=topo.colors(10))
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_text(aes(label=n), vjust=0) +
theme(legend.position = "none") +
scale_fill_manual(values=topo.colors(10))
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_text(aes(label=n), vjust=-0.2) +
theme(legend.position = "none") +
scale_fill_manual(values=topo.colors(10))
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=reorder(region, n), y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_text(aes(label=n), vjust=-0.2) +
theme(legend.position = "none") +
scale_fill_manual(values=topo.colors(10))
#노년층(수) 많은 지역순
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_label(aes(label=n), fill="white", nudge_y=1.1) + #막대 그래프에 y축 라벨 적기(1)
theme(legend.position = "none") +
scale_fill_manual(values=topo.colors(10))
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=reorder(region, n), y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_text(aes(label=n), vjust=-0.2) +
theme(legend.position = "none") +
scale_fill_manual(values=topo.colors(10))
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=reorder(region, n), y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_text(aes(label=n), vjust=-0.2) +
theme(legend.position = "none") +
scale_fill_manual(values=topo.colors(10))
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=reorder(region, n), y=n, fill=region)) +
geom_col()
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=reorder(region, n), y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_text(aes(label=n), vjust=-0.2) +
theme(legend.position = "none") +
scale_fill_manual(values=topo.colors(10))
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_text(aes(label=n), vjust=-0.2) +
theme(legend.position = "none") +
scale_fill_manual(values=topo.colors(10)) +
aes(x=reorder(region, n))
temp %>%
filter(agegrade=='old') %>%
arrange(-n) %>%
ggplot(aes(x=region, y=n, fill=region)) +
geom_col() +
aes(stringr::str_wrap(region, 6), n) +
labs(x="지역", y="노년층 인구") +
geom_text(aes(label=n), vjust=-0.2) +
theme(legend.position = "none") +
scale_fill_manual(values=topo.colors(10))
