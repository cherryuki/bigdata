rbind(group_a, group_b)
#두 데이터 프레임의 일부 변수가 다를 경우: bind_rows, merge만 가능
#rbind(group_a, group_b) 불가능
bind_rows(group_a, group_b)
merge(group_a, group_b, all=T)
# 5. 데이터 정제하기 - 결측치(NA), 이상치
boxplot(ggplot2::mpg$hwy)
# 5.1 결측치 정제하기
df <-data.frame(name=c('Kim', 'Lim', "Park", "Yun", "Han"),
gender=c('M','F',NA,'M','F'),
score=c(5,4,3,4,NA),
income=c(5000,3000,4000,3500,4000))
df
is.na(df)
dim(df)
table(is.na(df))
table(is.na(df$gender))
table(is.na(df$score))
na.omit(df)
df %>%
filter(!is.na(score)) %>%
summarise(avg_score=mean(score))
mean(df$score, na.rm=T)
tapply(df$score, df$gender, mean, na.rm=T)
summaryBy(score~gender, df, FUN=mean, na.rm=T)
library(doBy)
summaryBy(score~gender, df, FUN=mean, na.rm=T)
x <-c(1,1,2,2,3,3,3,4,4,5,5,100)
mean(x)
median(x)
exam <-read.csv('inData/exam.csv', header = T)
exam
table(is.na(exam))
colnames(exam)
exam[c(3,8,15), 'math'] <-NA #인위적으로 math에 결측치 입력력
exam[1:2, 'english'] <-NA #인위적으로 english에 결측치 입력력
table(is.na(exam))
tapply(exam[,3], exam$class, mean, na.rm=T)
apply(exam[3:5], 2, mean, na.rm=T)
exam %>%
summarise(math=mean(math, na.rm=T),
english=mean(english, na.rm=T),
science=mean(science, na.rm=T))
#결측치를 중앙값으로 대체
#중앙값: median(객체, na.rm=T), 평균: mean(객체, na.rm=T)
#소수점 처리를 위해 round() 이용시: round(meand(객체, na.rm=T))
exam$math
exam$math <-ifelse(is.na(exam$math), median(exam$math, na.rm=T), exam$math)
#결측치를 중앙값으로 대체
#중앙값: median(객체, na.rm=T), 평균: mean(객체, na.rm=T)
#소수점 처리를 위해 round() 이용시: round(meand(객체, na.rm=T))
exam$math
exam[c(3,8,15), 'math'] <-NA #인위적으로 math에 결측치 삽입
exam[1:2, 'english'] <-NA #인위적으로 english에 결측치 삽입
#결측치를 중앙값으로 대체
#중앙값: median(객체, na.rm=T), 평균: mean(객체, na.rm=T)
#소수점 처리를 위해 round() 이용시: round(meand(객체, na.rm=T))
exam$math
exam$math <-ifelse(is.na(exam$math), round(mean(exam$math, na.rm=T)), exam$math)
#결측치를 중앙값으로 대체
#중앙값: median(객체, na.rm=T), 평균: mean(객체, na.rm=T)
#소수점 처리를 위해 round() 이용시: round(meand(객체, na.rm=T))
exam$math
exam$english
exam$english <-ifelse(is.na(exam$english), round(median(exam$english, na.rm=T)), exam$english)
exam$english
head(exam$english)
round(median(exam$english))
head(exam$english)
exam[c(1,3,8), 'math'] <-NA
exam[1:2, 'english'] <-NA
exam[1, 'science'] <-NA
head(exam)
#결측치 대체방법1
median <-round(apply(exam[3:5], 2, mean, na.rm=T))
#결측치 대체방법1
median <-round(apply(exam[3:5], 2, median, na.rm=T))
median['math']; median['english']; median['science']
#결측치 대체방법1
median <-round(apply(exam[3:5], 2, mean, na.rm=T))
median['math']; median['english']; median['science']
#결측치 대체방법1
median <-round(apply(exam[3:5], 2, median, na.rm=T))
median['math']; median['english']; median['science']
exam <-within(exam, {#결측치 대체하기 위한 블록
math <-ifelse(is.na(math), median['math'], math)
english <-ifelse(is.na(english), median['english'], english)
science <-ifelse(is.na(science), median['science'], science)
})
head(exam)
table(is.na(exam))
colSums(is.na(exam))
exam[c(1,3,8), 'math'] <-NA
exam[1:2, 'english'] <-NA
exam[1, 'science'] <-NA
colSums(is.na(exam)) #변수별로 결측치 확인
#결측치 대체 방법2(dplyr패키지 이용)
colSums(is.na(exam))
median['math']; median['english']; median['science']
exam <- exam %>%
mutate(
math=ifelse(is.na(math), median['math'], math),
english=ifelse(is.na(english), median['english'], engilsh),
science=ifelse(is.na(science), median['science'], science)
)
exam <- exam %>%
mutate(
math=ifelse(is.na(math), median['math'], math),
english=ifelse(is.na(english), median['english'], english),
science=ifelse(is.na(science), median['science'], science)
)
head(exam)
# (1) 논리적 이상치
outlier <-data.frame(gender=c(1,2,1,3,2),
score=c(90,95,100,99,101))
table(outlier$gender)
#gender 1은 남, 2는 여, 3은 이상치 처리
outlier$gender <-ifelse(outlier==3, NA, outlier$gender)
outlier
outlier$gender <-ifelse(outlier$gender!=1&outlier$gender!=2, NA, outlier$gender)
outlier
# (1) 논리적 이상치
outlier <-data.frame(gender=c(1,2,1,3,2),
score=c(90,95,100,99,101))
outlier$gender <-ifelse(outlier$gender!=1&outlier$gender!=2, NA, outlier$gender)
outlier
#score가 100초과하는 경우 이상치 처리
outlier$score <-ifelse(outlier$score>100, NA, outlier$score)
outlier
# (2) 정상범위 기준을 많이 벗어난 이상치: 상하위 0.3% or 평균±3*표준편차
mpg <-as.data.frame(ggplot2::mpg)
mpg$hwy
mean(mgp$hwy)
sd(mpg$hwy)
mean(mpg$hwy)
boxplot(mpg$hwy)
result <-boxplot(mpg$hwy)$stats
result
result[1]; result[5]
mpg$hwy <-ifelse(mpg$hwy>result[5]|mpg$hwy<result[1], NA, mpg$hwy)
table(is.na(mpg$hwy))
summary(mpg$hwy)
#Q1.
mpg %>%
mutate(displ_range=ifelse(displ<=4, 'less4', ifelse(displ>=5, 'more5', '4-5'))) %>%
group_by(displ_range) %>%
summarise(avg_hwy=mean(hwy)) %>%
filter(displ_range %in% c('less4', 'more5') )
mpg <-as.data.frame(ggplot2::mpg)
#Q1.
mpg %>%
mutate(displ_range=ifelse(displ<=4, 'less4', ifelse(displ>=5, 'more5', '4-5'))) %>%
group_by(displ_range) %>%
summarise(avg_hwy=mean(hwy)) %>%
filter(displ_range %in% c('less4', 'more5') )
mpg$displ_range <- (ifelse(mpg$displ<=4, 'less4', ifelse(mpg$displ>=5, 'more5', 'NA')))
head(mpg)
tapply(mpg$hwy, mpg$displ_range, mean)[c(1,2)]
by(mpg$hwy, mpg$displ_range, mean)[c('less4','more5')]
summaryBy(hwy~displ_range, mpg)[c(1,2),]
aggregate(mpg$hwy, by=list(mpg$displ_range), mean)[c(1,2),]
#Q2.
mpg %>%
filter(manufacturer %in% c('audi', 'toyota')) %>%
group_by(manufacturer) %>%
summarise(avg_cty=mean(cty))
tapply(mpg$cty, mpg$manufacturer, mean)[c('audi','toyota')]
by(mpg$cty, mpg$manufacturer, mean)[c('audi','toyota')]
summaryBy(cty~manufacturer, mpg)[c(1,14),]
aggregate(mpg$cty, by=list(mpg$manufacturer), mean)[c(1,14),]
#Q3.
mpg %>%
filter(manufacturer %in% c('chevrolet', 'ford', 'honda')) %>%
group_by(manufacturer) %>%
summarise(avg_hwy=mean(hwy)) #%>%summarise(avg_hwy2=mean(avg_hwy))
tapply(mpg$hwy, mpg$manufacturer, mean)[c('chevrolet', 'ford', 'honda')]
#mean(tapply(mpg$hwy, mpg$manufacturer, mean)[c('chevrolet', 'ford', 'honda')])
by(mpg$hwy, mpg$manufacturer, mean)[c('chevrolet', 'ford', 'honda')]
#mean(tapply(mpg$hwy, mpg$manufacturer, mean)[c('chevrolet', 'ford', 'honda')])
by(mpg$hwy, mpg$manufacturer, mean)[c('chevrolet', 'ford', 'honda')]
#mean(by(mpg$hwy, mpg$manufacturer, mean)[c('chevrolet', 'ford', 'honda')])
summaryBy(hwy~manufacturer, mpg)[c(2,4,5),]
#mean(summaryBy(hwy~manufacturer, mpg)[c(2,4,5),][,2])
aggregate(mpg$hwy, by=list(mpg$manufacturer), mean)[c(2,4,5),]
#혼자 해보기2
#Q1.
mpg2 <- mpg %>%
select(class, cty)
#혼자 해보기2
#Q1.
mpg2 <- mpg %>%
select(class, cty)
names(mpg2)
mpg2 <- data.frame(mpg$class, mpg$cty)
head(mpg2)
#Q2.
table(mpg2$class)
#혼자 해보기2
#Q1.
mpg2 <- mpg %>%
select(class, cty)
#Q2.
table(mpg2$class)
mpg2 %>%
filter(class %in% c('suv', 'compact')) %>%
group_by(class) %>%
summarise(avg_cty=mean(cty))
table(mpg2$mpg.class)
tapply(mpg2$mpg.cty, mpg2$mpg.class, mean)[c('compact','suv')]
mpg2 <- data.frame(mpg$class, mpg$cty)
table(mpg2$mpg.class)
tapply(mpg2$mpg.cty, mpg2$mpg.class, mean)[c('compact','suv')]
by(mpg2$mpg.cty, mpg2$mpg.class, mean)[c('compact','suv')]
summaryBy(mpg.cty~mpg.class, mpg2)[c(2,7),]
aggregate(mpg2$mpg.cty, by=list(mpg2$mpg.class), mean)[c(2,7),]
#Q3.
mpg %>%
filter(manufacturer=='audi') %>%
arrange(-hwy) %>%
head(5)
audi<-mpg[mpg$manufacturer=='audi',]
head(audi[order(-audi$hwy),],5)
head(orderBy(~-hwy, data=audi),5)
#혼자 해보기3
#Q1.
mpg_copy <- mpg %>%
mutate(total=cty+hwy)
mpg_copy <-data.frame(mpg)
mpg_copy$total <-mpg_copy$cty+mpg_copy$hwy
head(mpg_copy)
#Q2.
mpg_copy %>%
mutate(avg=total/2)
mpg_copy$avg <-mpg_copy$total/2
head(mpg_copy)
#Q3.
mpg_copy %>%
arrange(-(cty+hwy)/2) %>%
head(3)
head(orderBy(~-avg, data=mpg_copy),3)
head(mpg_copy[order(-mpg_copy$avg),],3)
#Q4.
mpg %>%
mutate(total=cty+hwy,
avg=total/2) %>%
arrange(-avg) %>%
head(3)
##혼자 해보기4
#Q1.
table(mpg$class)
mpg %>%
group_by(class) %>%
summarise(avg_cty=mean(cty))
tapply(mpg$cty, mpg$class, mean)
by(mpg$cty, mpg$class, mean)
summaryBy(cty~class, data=mpg)
aggregate(mpg$cty, by=list(mpg$class), mean)
#Q2.
mpg %>%
group_by(class) %>%
summarise(avg_cty=mean(cty)) %>%
arrange(-avg_cty)
sort(tapply(mpg$cty, mpg$class, mean), decreasing = T)
sort(by(mpg$cty, mpg$class, mean), decreasing = T)
result <-summaryBy(cty~class, mpg)
result[order(result$cty.mean, decreasing = T),]
orderBy(~-cty.mean, result)
result <-aggregate(mpg$cty, by=list(mpg$class), mean)
result[order(result$x, decreasing = T),]
orderBy(~-x, result)
#Q3.
mpg %>%
group_by(manufacturer) %>%
summarise(avg_hwy=mean(hwy)) %>%
arrange(desc(avg_hwy)) %>%
head(3)
head(sort(tapply(mpg$hwy, mpg$manufacturer, mean), decreasing = T),3)
head(sort(by(mpg$hwy, mpg$manufacturer, mean), decreasing = T),3)
head(orderBy(~-hwy.mean, data=summaryBy(hwy~manufacturer, data=mpg)),3)
head(orderBy(~-x, data=aggregate(mpg$hwy, by=list(mpg$manufacturer), mean)),3)
#Q4.
mpg %>%
filter(class=='compact') %>%
group_by(manufacturer) %>%
summarise(n_compact=n()) %>%
arrange(-n_compact)
class_compact <- mpg[mpg$class=='compact',]
sort(table(class_compact$manufacturer), decreasing = T)
compact <- subset(mpg, mpg$class=='compact')
sort(table(compact$manufacturer), decreasing = T)
# 혼자 해보기5
mpg <-as.data.frame(ggplot2::mpg)
colnames(mpg)
mpg$fl
table(mpg$fl)
head(mpg)
fuel <-data.frame(fl=c('c','d','e','p','r'),
kind=c('CNG', 'diesel', 'ethanol E85', 'premium', 'regular'),
price_fl=c(2.35,2.38,2.11,2.76,2.22))
head(mpg)
mpg$price_fl <- left_join(mpg, fuel, by="fl")$price_fl
head(mpg)
tail(mpg)
mpg %>%
mutate(price_fl=left_join(mpg, fuel, by="fl")$price_fl)
mpg %>%
mutate(price_fl=(left_join(mpg, fuel, by="fl")$price_fl))
mpg %>%
mutate(price_fl=(left_join(mpg, fuel, by="fl")$price_fl)) %>%
head(5)
#Q1.
mpg$price_fl <- left_join(mpg, fuel, by="fl")[,'price_fl']
# 혼자 해보기5
mpg <-as.data.frame(ggplot2::mpg)
fuel <-data.frame(fl=c('c','d','e','p','r'),
kind=c('CNG', 'diesel', 'ethanol E85', 'premium', 'regular'),
price_fl=c(2.35,2.38,2.11,2.76,2.22))
head(mpg)
#Q1.
mpg$price_fl <- left_join(mpg, fuel, by="fl")[,'price_fl']
head(mpg)
# 혼자 해보기5
mpg <-as.data.frame(ggplot2::mpg)
mpg %>%
mutate(price_fl=(left_join(mpg, fuel, by="fl")$price_fl)) %>%
head(5)
#Q2.
mpg[,c(model, fl, price_fl)]
#Q2.
head(mpg[,c('model', 'fl', 'price_fl')],5)
# 혼자 해보기5
mpg <-as.data.frame(ggplot2::mpg)
fuel <-data.frame(fl=c('c','d','e','p','r'),
kind=c('CNG', 'diesel', 'ethanol E85', 'premium', 'regular'),
price_fl=c(2.35,2.38,2.11,2.76,2.22))
#Q1.
mpg$price_fl <- left_join(mpg, fuel, by="fl")[,'price_fl']
#Q2.
mpg[1:5,c('model', 'fl', 'price_fl')]
mpg %>%
mutate(price_fl=(left_join(mpg, fuel, by="fl")$price_fl)) %>%
select(model, fl, price_fl) %>%
head(5)
mpg %>%
mutate(price_fl=(left_join(mpg, fuel, by="fl")$price_fl)) %>%
select('model', 'fl', 'price_fl') %>%
head(5)
# 혼자 해보기5
mpg <-as.data.frame(ggplot2::mpg)
mpg %>%
mutate(price_fl=(left_join(mpg, fuel, by="fl")$price_fl)) %>%
select('model', 'fl', 'price_fl') %>%
head(5)
# 혼자 해보기6
table(mpg$drv) #4(4륜구동), f(전륜구동), r(후륜구동)
mpg <- as.data.frame(ggplot2::mpg) # mpg 데이터 불러오기
mpg[c(10, 14, 58, 93), "drv"] <- "k" # drv 이상치 할당
mpg[c(29, 43, 129, 203), "cty"] <- c(3, 4, 39, 42) # cty 이상치 할당
table(mpg$drv)
mpg$drv <-ifelse(mpg$drv %in% c('4', 'f', 'r'), mpg$drv, NA)
#Q1.
table(mpg$drv) #이상치 k 확인
#Q2.
boxplot(mpg$cty)
result <-boxplot(mpg$cty)$stats
result
mpg$cty <-ifelse(mpg$cty<result[1]|mpg$cty>result[5], NA, mpg$cty)
boxplot(mpg$cty)
mpg[c(29, 43, 129, 203), "cty"] <- c(3, 4, 39, 42) # cty 이상치 할당
#Q2.
boxplot(mpg$cty) #정상 범위 벗어난 이상치 확인
result <-boxplot(mpg$cty)$stats
result
mpg$cty <-ifelse(mpg$cty %in% c(result[1]:result[5]), mpg$cty, NA)
boxplot(mpg$cty)
mpg$drv <-ifelse(mpg$drv!='4'&mpg$drv!='f'&mpg$drv!='r', NA, mpg$drv)
# 혼자 해보기6
table(mpg$drv) #4(4륜구동), f(전륜구동), r(후륜구동)
mpg <- as.data.frame(ggplot2::mpg) # mpg 데이터 불러오기
mpg[c(10, 14, 58, 93), "drv"] <- "k" # drv 이상치 할당
mpg$drv <-ifelse(mpg$drv %in% c('4', 'f', 'r'), mpg$drv, NA)
mpg$drv <-ifelse(mpg$drv!='4'&mpg$drv!='f'&mpg$drv!='r', NA, mpg$drv)
mpg <- as.data.frame(ggplot2::mpg) # mpg 데이터 불러오기
mpg[c(10, 14, 58, 93), "drv"] <- "k" # drv 이상치 할당
#Q1.
table(mpg$drv) #이상치 k 확인
mpg$drv <-ifelse(mpg$drv!='4'&mpg$drv!='f'&mpg$drv!='r', NA, mpg$drv)
#Q1.
table(mpg$drv) #이상치 k 확인
#Q3.
mpg %>%
group_by(drv) %>%
summarise(avg_cty=mean(cty, na.rm=T))
#Q3.
mpg %>%
filter(drv %in% c('4', 'f', 'r')) %>% #NA도 나오게 하려면 filter 없애면 됨
group_by(drv) %>%
summarise(avg_cty=mean(cty, na.rm=T))
#Q3.
mpg %>%
filter(drv %in% c('4', 'f', 'r')) %>% #NA도 나오게 하려면 filter 없애면 됨
mutate(cty=ifelse(is.na(cty), median(cty), cty)) %>%
group_by(drv) %>%
summarise(avg_cty=mean(cty, na.rm=T))
mpg %>%
filter(drv %in% c('4', 'f', 'r')) %>% #NA도 나오게 하려면 filter 없애면 됨
group_by(drv) %>%
summarise(avg_cty=mean(cty, na.rm=T))
#분석 도전
midwest <-as.data.frame(ggplot2::midwest)
#Q1.
midwest$junior_ratio <-(medwest$poptotal-medwest$popadults)/medwest$poptotal*100
#Q1.
midwest$junior_ratio <-(midwest$poptotal-midwest$popadults)/midwest$poptotal*100
midwest %>%
mutate(junior_ratio=(poptotal-popadults)/poptotal*100) %>%
group_by(county)
midwest %>%
mutate(junior_ratio=(poptotal-popadults)/poptotal*100) %>%
group_by(county) %>%
arrange(desc(junior_ratio)) %>%
head(5)
head(5)
midwest %>%
mutate(junior_ratio=(poptotal-popadults)/poptotal*100) %>%
group_by(county) %>%
arrange(desc(junior_ratio)) %>%
select('county') %>%
head(5)
midwest %>%
mutate(junior_ratio=(poptotal-popadults)/poptotal*100) %>%
group_by(county) %>%
arrange(desc(junior_ratio)) %>%
select('county', 'junior_ratio') %>%
head(5)
midwest %>%
mutate(junior_ratio=(poptotal-popadults)/poptotal*100) %>%
arrange(desc(junior_ratio)) %>%
select('county', 'junior_ratio') %>%
head(5)
#Q3.
midwest$junior_grade <-ifelse(midwest$junior_ratio>=40, 'large',
ifelst(midwest$junior_ratio<30, 'small', 'middle'))
#Q3.
midwest$junior_grade <-ifelse(midwest$junior_ratio>=40, 'large',
ifelse(midwest$junior_ratio<30, 'small', 'middle'))
midwest %>%
mutate(junior_grade=iflese(junior_ratio>=40, 'large',
ifelse(junior_ratio<30, 'small', 'middle'))) %>%
group_by(junior_grade) %>%
select('county') %>%
summarise(n_county=n)
midwest %>%
mutate(junior_grade=ifelse(junior_ratio>=40, 'large',
ifelse(junior_ratio<30, 'small', 'middle'))) %>%
group_by(junior_grade) %>%
select('county') %>%
summarise(n_county=n)
midwest %>%
mutate(junior_grade=ifelse(junior_ratio>=40, 'large',
ifelse(junior_ratio<30, 'small', 'middle'))) %>%
group_by(junior_grade) %>%
select('county') %>%
summarise(n_county=n())
table(midwest$junior_grade)
#Q3.
midwest$junior_grade <-ifelse(midwest$junior_ratio>=40, 'large',
ifelse(midwest$junior_ratio<30, 'small', 'middle'))
table(midwest$junior_grade)
midwest %>%
mutate(junior_grade=ifelse(junior_ratio>=40, 'large',
ifelse(junior_ratio<30, 'small', 'middle'))) %>%
group_by(junior_grade) %>%
select(county) %>%
summarise(n_county=n())
#Q4.
midwest$asian_ratio <-midwest$popasian/midwest$poptotal*100
midwest %>%
mutate(ratio_asian=popasian/poptotal*100) %>%
arrange(ratio_asian) %>%
select(c('state', 'county', 'ratio_asian')) %>%
tail(10)
midwest %>%
mutate(asian_ratio=popasian/poptotal*100) %>%
arrange(asian_ratio) %>%
select(c('state', 'county', 'asian_ratio')) %>%
head(10)
midwest %>%
mutate(asian_ratio=popasian/poptotal*100) %>%
arrange(-asian_ratio) %>%
select(c('state', 'county', 'asian_ratio')) %>%
tail(10)
midwest %>%
mutate(asian_ratio=popasian/poptotal*100) %>%
arrange(asian_ratio) %>%
head(10) %>%
select(c('state', 'county', 'asian_ratio'))
midwest %>%
mutate(asian_ratio=popasian/poptotal*100) %>%
arrange(-asian_ratio) %>%
tail(10) %>%
select(c('state', 'county', 'asian_ratio')) %>%
midwest %>%
mutate(asian_ratio=popasian/poptotal*100) %>%
arrange(asian_ratio) %>%
head(10) %>%
select(c('state', 'county', 'asian_ratio'))
midwest %>%
mutate(asian_ratio=popasian/poptotal*100) %>%
arrange(-asian_ratio) %>%
tail(10) %>%
select(c('state', 'county', 'asian_ratio'))
